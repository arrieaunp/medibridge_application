from .notification_service import NotificationService
from datetime import datetime

class PaymentNotification:
    def __init__(self, db, service_account_file):
        self.notification_service = NotificationService(db, service_account_file)

    def notify_patient_about_payment_due(self, patient_id, amount):
        """üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞"""
        patient_doc = self.notification_service.db.collection('User').document(patient_id).get()
        if not patient_doc.exists:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ID: {patient_id}")
            return

        tokens = patient_doc.to_dict().get('fcm_token', [])
        if not tokens:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ FCM Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏µ‡πâ")
            return

        title = "üí≥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"
        body = f"‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡∏ö‡∏≤‡∏ó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"

        is_sent = self.notification_service.send_fcm_notification(
            tokens=tokens,
            title=title,
            body=body,
            data={"type": "PAYMENT_DUE", "amount": str(amount)},
            role="Patient",
            recipient_id=patient_id
        )

        if is_sent:
            print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô Firestore")
        else:
            print(f"‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")


    def notify_staff_about_patient_payment(self, patient_id, appointment_id, slip_url):
        """üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"""
        print("üì° [DEBUG] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Staff")

        # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ first_name ‡πÅ‡∏•‡∏∞ last_name ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏à‡∏≤‡∏Å User
        patient_doc = self.notification_service.db.collection('User').document(patient_id).get()

        if not patient_doc.exists:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏à‡∏≤‡∏Å User collection: {patient_id}")
            return

        patient_data = patient_doc.to_dict()
        patient_name = f"{patient_data.get('first_name', '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠')} {patient_data.get('last_name', '')}"
        print(f"üë§ [DEBUG] ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢: {patient_name}")

        # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‡∏à‡∏≤‡∏Å Appointments
        appointment_doc = self.notification_service.db.collection('Appointments').document(appointment_id).get()

        if not appointment_doc.exists:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ID: {appointment_id}")
            return

        appointment_data = appointment_doc.to_dict()

        # üóìÔ∏è ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà-‡πÄ‡∏ß‡∏•‡∏≤
        raw_date = appointment_data.get('appointment_date')
        if isinstance(raw_date, datetime):
            appointment_date = raw_date.strftime('%d %B %Y')  # ‡πÄ‡∏ä‡πà‡∏ô 22 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025
        else:
            appointment_date = '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'

        appointment_time = appointment_data.get('appointment_time', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤')

        # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ FCM Token ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
        staff_docs = self.notification_service.db.collection('User').where('role', '==', 'Staff').stream()
        tokens = []
        for doc in staff_docs:
            tokens.extend(doc.to_dict().get('fcm_token', []))
            print(f"üü° [DEBUG] Staff FCM Token: {doc.to_dict().get('fcm_token', [])}")

        if not tokens:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ FCM Token ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà")
            return

        # üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        title = "üì© ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"
        body = f"‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ {patient_name} ‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {appointment_date} ‡πÄ‡∏ß‡∏•‡∏≤ {appointment_time}"

        # ‚úÖ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô FCM
        is_sent = self.notification_service.send_fcm_notification(
            tokens=tokens,
            title=title,
            body=body,
            data={
                "type": "PAYMENT_UPLOAD",
                "patient_id": patient_id,
                "patient_name": patient_name,
                "appointment_date": appointment_date,
                "appointment_time": appointment_time,
                "slip_url": slip_url
            },
            role="Staff",
            recipient_id="all_staff"
        )

        # ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firestore ‡πÉ‡∏ô Notifications
        if is_sent:
            print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            self.notification_service.db.collection("Notifications").add({
                "title": title,
                "body": body,
                "data": {
                    "type": "PAYMENT_UPLOAD",
                    "patient_id": patient_id,
                    "patient_name": patient_name,
                    "appointment_date": appointment_date,
                    "appointment_time": appointment_time,
                    "slip_url": slip_url
                },
                "role": "Staff",
                "recipient_id": "all_staff",
                "timestamp": datetime.now()
            })
        else:
            print(f"‚ùå ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
            
    def notify_patient_about_payment_status(self, patient_id, appointment_id, status):
        """üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"""

        # ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å Firestore
        appointment_doc = self.notification_service.db.collection('Appointments').document(appointment_id).get()
        if not appointment_doc.exists:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ID: {appointment_id}")
            return

        appointment_data = appointment_doc.to_dict()
        # üóìÔ∏è ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
        raw_date = appointment_data.get('appointment_date')
        if isinstance(raw_date, datetime):
            appointment_date = raw_date.strftime('%d %B %Y')  # ‡πÄ‡∏ä‡πà‡∏ô 22 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025
        else:
            appointment_date = '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'

        appointment_time = appointment_data.get('appointment_time', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤')


        # ‚úÖ ‡∏î‡∏∂‡∏á FCM Token ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
        patient_doc = self.notification_service.db.collection('User').document(patient_id).get()
        if not patient_doc.exists:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ID: {patient_id}")
            return

        tokens = patient_doc.to_dict().get('fcm_token', [])
        if not tokens:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ FCM Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏µ‡πâ")
            return

        # üì© ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        title = "üí≥ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"
        body = f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {appointment_date} ‡πÄ‡∏ß‡∏•‡∏≤ {appointment_time}: {status}"

        # üöÄ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô FCM
        is_sent = self.notification_service.send_fcm_notification(
            tokens=tokens,
            title=title,
            body=body,
            data={
                "type": "PAYMENT_STATUS",
                "appointment_id": appointment_id,
                "appointment_date": str(appointment_date),
                "appointment_time": str(appointment_time),
                "status": status
            },
            role="Patient",
            recipient_id=patient_id
        )

        if is_sent:
            print(f"‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            print(f"‚ùå ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
